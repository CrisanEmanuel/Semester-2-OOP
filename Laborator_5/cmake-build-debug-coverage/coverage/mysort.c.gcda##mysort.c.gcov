        -:    0:Source:C:/Users/EMANUEL/Desktop/OOP/Laborator_5/mysort.c
        -:    0:Graph:C:\Users\EMANUEL\Desktop\OOP\Laborator_5\cmake-build-debug-coverage\CMakeFiles\Laborator_5.dir\mysort.c.gcno
        -:    0:Data:C:\Users\EMANUEL\Desktop\OOP\Laborator_5\cmake-build-debug-coverage\CMakeFiles\Laborator_5.dir\mysort.c.gcda
        -:    0:Runs:1
        -:    1:#include "mysort.h"
        -:    2:
function sort called 2 returned 100% blocks executed 100%
        2:    3:void sort(CarList* l, FunctieComparare cmpF){
       12:    4:    for(int i = 0; i < size(l); i++){
        2:    4-block  0
       10:    4-block  1
       12:    4-block  2
call    0 returned 12
branch  1 taken 10
branch  2 taken 2 (fallthrough)
       30:    5:        for(int j = i + 1; j < size(l); j++){
       10:    5-block  0
       20:    5-block  1
       30:    5-block  2
call    0 returned 30
branch  1 taken 20
branch  2 taken 10 (fallthrough)
       20:    6:            void* elem1 = get(l,i);
       20:    6-block  0
call    0 returned 20
       20:    7:            void* elem2 = get(l, j);
call    0 returned 20
       20:    8:            if(cmpF(elem1, elem2) > 0){
call    0 returned 20
branch  1 taken 13 (fallthrough)
branch  2 taken 7
       13:    9:                set(l, i, elem2);
       13:    9-block  0
call    0 returned 13
       13:   10:                set(l, j, elem1);
call    0 returned 13
        -:   11:            }
        -:   12:        }
        -:   13:    }
        2:   14:}
